<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find robotv1_gazebo)/worlds/robotv1.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find robotv1_description)/urdf/robotv1.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF rorobotv1 -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args=" -urdf  
    -x 0 -y 0 -z 0
    -model robotv1 -param robot_description"/>

  <!-- ros_control robotv1 launch file -->
  <include file="$(find robotv1_control)/launch/robotv1_control.launch" />
  <!-- publishing zmp -->
  <include file="$(find robotv1_control)/launch/zmp.launch" />
  
  <include file="$(find demo_moveit_config)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
  </include>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
     <param name="use_gui" value="false"/>
     <rosparam param="source_list">[/robotv1/joint_states]</rosparam>
  </node>
  
  <include file="$(find demo_moveit_config)/launch/move_group.launch">
      <arg name="publish_monitored_planning_scene" value="true" />
      <arg name="allow_trajectory_execution" value="true"/>
      <arg name="fake_execution" value="false"/>
  </include>
  <!--  <node name="rviz" pkg="rviz" type="rviz"/> -->
  <node name="move_legs"
       pkg="robotv1_control"
       type="move_legs"
       respawn="false" output="screen">
     <rosparam command="load"
         file="$(find demo_moveit_config)/config/kinematics.yaml"/>
  </node>

</launch>
