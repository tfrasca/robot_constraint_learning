<?xml version="1.0" ?>
<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--
    <arg name="world_name" value="$(find robot_constraint_learning)/worlds/light_box.world"/>
    -->
    <arg name="world_name" value="$(find op3_gazebo)/worlds/empty.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="light_box" textfile="$(find robot_constraint_learning)/models/light_box/model.sdf"/>
  <param name="heavy_box" textfile="$(find robot_constraint_learning)/models/heavy_box/model.sdf"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find op3_description)/urdf/robotis_op3.urdf.xacro'" />
  <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen"
        args="-urdf -model robotis -z 0.285 -param robot_description"/>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <include file="$(find robot_constraint_learning)/launch/robotis_op3_joint_trajectory_controller.launch" />
  <!--
  <include file="$(find robot_constraint_learning)/launch/robotis_op3_velocity_joint_trajectory_controller.launch" />
  -->
</launch>
